/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pdfcombiner;

import java.awt.Color;
import java.awt.Insets;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JTextPane;
import javax.swing.border.EmptyBorder;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import org.apache.commons.io.FilenameUtils;
import org.apache.pdfbox.io.MemoryUsageSetting;
import org.apache.pdfbox.multipdf.PDFMergerUtility;

/**
 *
 * @author Muneer Sial
 */
public class MainApp extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
        this.setResizable(false);
        combineBtn.setEnabled(false);
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        EmptyBorder eb = new EmptyBorder(new Insets(10, 10, 10, 10));
        progressConsolePane.setBorder(eb);
        progressConsolePane.setMargin(new Insets(5, 5, 5, 5));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        folderAbtn = new javax.swing.JButton();
        combineBtn = new javax.swing.JButton();
        folderSourcebtn = new javax.swing.JButton();
        letterLabel = new javax.swing.JLabel();
        billsLabel = new javax.swing.JLabel();
        sourceLabel = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        folderBbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        progressConsolePane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        folderAbtn.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        folderAbtn.setForeground(new java.awt.Color(0, 102, 102));
        folderAbtn.setText("Select Approval Letters Folder");
        folderAbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderAbtnActionPerformed(evt);
            }
        });

        combineBtn.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        combineBtn.setForeground(new java.awt.Color(0, 102, 102));
        combineBtn.setText("Generate Combined PDFs");
        combineBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combineBtnActionPerformed(evt);
            }
        });

        folderSourcebtn.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        folderSourcebtn.setForeground(new java.awt.Color(0, 102, 102));
        folderSourcebtn.setText("Select Source Folder");
        folderSourcebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderSourcebtnActionPerformed(evt);
            }
        });

        letterLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        letterLabel.setForeground(new java.awt.Color(102, 51, 0));

        billsLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        billsLabel.setForeground(new java.awt.Color(102, 51, 0));

        sourceLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        sourceLabel.setForeground(new java.awt.Color(102, 51, 0));

        folderBbtn.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        folderBbtn.setForeground(new java.awt.Color(0, 102, 102));
        folderBbtn.setText("Select Bills Folder");
        folderBbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderBbtnActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(progressConsolePane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(folderAbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(folderSourcebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(folderBbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(letterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(billsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sourceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(168, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(combineBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(352, 352, 352))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(164, 164, 164))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(letterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(folderAbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(billsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folderBbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(folderSourcebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(combineBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void folderAbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folderAbtnActionPerformed
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
          System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
          System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
          appendToPane(progressConsolePane, "Folder A is : "+chooser.getSelectedFile()+"\n", Color.BLUE);
          folderA = chooser.getSelectedFile();
          letterLabel.setText(chooser.getSelectedFile().toString());
        } else {
          System.out.println("No Selection ");
        }
        
        if(folderA.exists() && folderB.exists() && folderSource.exists()){
            combineBtn.setEnabled(true);
        }
    }//GEN-LAST:event_folderAbtnActionPerformed

    private void folderBbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folderBbtnActionPerformed
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
          System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
          System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
          appendToPane(progressConsolePane, "Folder B is : "+chooser.getSelectedFile()+"\n", Color.RED);
          folderB = chooser.getSelectedFile();
          billsLabel.setText(chooser.getSelectedFile().toString());
        } else {
          System.out.println("No Selection ");
        }
        
        if(folderA.exists() && folderB.exists() && folderSource.exists()){
            combineBtn.setEnabled(true);
        }
    }//GEN-LAST:event_folderBbtnActionPerformed

    private void folderSourcebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folderSourcebtnActionPerformed
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
          System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
          System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
          appendToPane(progressConsolePane, "Source Folder is : "+chooser.getSelectedFile()+"\n", Color.GREEN);
          folderSource = chooser.getSelectedFile();
          sourceLabel.setText(chooser.getSelectedFile().toString());
        } else {
          System.out.println("No Selection ");
        }
        
        if(folderA.exists() && folderB.exists() && folderSource.exists()){
            combineBtn.setEnabled(true);
        }
    }//GEN-LAST:event_folderSourcebtnActionPerformed

    private void combineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combineBtnActionPerformed
        listFilesInDirA();
    }//GEN-LAST:event_combineBtnActionPerformed

    private void listFilesInDirA(){
        for (File fileEntry : folderA.listFiles()) {
            if (fileEntry.isFile()) {
                if(checkRegex(fileEntry.getName()) != null && FilenameUtils.getExtension(fileEntry.getName()).toLowerCase().equals("pdf")){
                    CombineAndSavePDF(compareWithDirB(checkRegex(fileEntry.getName())), fileEntry, checkRegex(fileEntry.getName()));
                }
            } else {
                System.out.println(fileEntry.getName());
            }
        }
    }
    
    private File compareWithDirB(String regexStr){
        for (File fileEntry : folderB.listFiles()) {
            if (fileEntry.isFile()) {
                if(checkRegex(fileEntry.getName()) != null && FilenameUtils.getExtension(fileEntry.getName()).toLowerCase().equals("pdf")){
                    if(checkRegex(fileEntry.getName()).equals(regexStr)){
                        return fileEntry;
                    }
                }
            } else {
                System.out.println(fileEntry.getName());
            }
        }
        return null;
    }
    
    private void CombineAndSavePDF(File fileA, File fileB, String matched ) {
        try{
            
            MemoryUsageSetting memUsageSetting = MemoryUsageSetting.setupMixed(0);
            PDFMergerUtility pdfmu = new PDFMergerUtility();
            System.out.println(fileA.exists());
            System.out.println(fileB.exists());
            appendToPane(progressConsolePane, "Combining PDF "+fileA.getName()+" and "+fileB.getName()+"\n", Color.DARK_GRAY);
           
            pdfmu.addSource(fileA);
            pdfmu.addSource(fileB);
            
            boolean created = (new File(folderSource.toString()+"\\"+matched)).mkdirs();;
            
            pdfmu.setDestinationFileName(folderSource.toString()+"\\"+matched+"\\"+matched+".pdf");
            try {
                if(created){
                    pdfmu.mergeDocuments(memUsageSetting);
                    System.out.println(folderSource.toString()+"\\"+matched+"\\"+matched+".pdf"+" created");
                }
            } catch (IOException ex) {
                System.out.println(folderSource.toString()+"\\"+matched+"\\"+matched+".pdf"+" not created");
                Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        catch(FileNotFoundException file){
            System.err.println(file);
        }
    }

    
    private String checkRegex(String str){
        Pattern pattern = Pattern.compile("[A-Z]{1}-[0-9]{8}-[0-9]{7}");
        Matcher match = pattern.matcher(str);
        while(match.find()){
            return match.group();
        }
        return null;
    }
    
    private void appendToPane(JTextPane tp, String msg, Color c){
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);

        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);

        int len = tp.getDocument().getLength();
        tp.setCaretPosition(len);
        tp.setCharacterAttributes(aset, false);
        tp.replaceSelection(msg);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel billsLabel;
    private javax.swing.JButton combineBtn;
    private javax.swing.JButton folderAbtn;
    private javax.swing.JButton folderBbtn;
    private javax.swing.JButton folderSourcebtn;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel letterLabel;
    private javax.swing.JTextPane progressConsolePane;
    private javax.swing.JLabel sourceLabel;
    // End of variables declaration//GEN-END:variables

    private File folderA;
    private File folderB;
    private File folderSource;
    JFileChooser chooser = new JFileChooser();   
}
